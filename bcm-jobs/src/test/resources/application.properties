
server.servlet.context-path=/buildcredit
server.port=${PORT:8080}


#local configuration

spring.datasource.url=${DB_HOST:jdbc:postgresql://dbclusteridentifier-extracredit-bcm-dev-data01.cluster-czqcrnu8rq1a.us-west-2.rds.amazonaws.com:5432/BuildCredit?currentSchema="rtcustomer"}
spring.datasource.username=${DB_USERNAME:moasan}
spring.datasource.password=${DB_PASSWORD:Bcm@123%}
spring.jpa.properties.schema=rtcustomer
spring.datasource.initialization-mode=always
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.batch.initialize-schema=always
management.endpoint.health.show-details=always
management.security.enabled=false
spring.datasource.properties.hibernate.jdbc.lob.non_contextual_creation=true

#RentTrack OAuth Partner Properties
renttrack.oauth.baseUrl=${RENTTRACK_OAUTH_BASEURL:https://my.sandbox.rt-stg.com}
renttrack.oauth.tokenUrl=${RENTTRACK_OAUTH_TOKENURL:/oauth/v2/token?client_id=CLIENT_ID&client_secret=CLIENT_SECRET&username=USER_NAME&password=SECRET&grant_type=GRANT_TYPE}
renttrack.oauth.refreshTokenUrl=${RENTTRACK_OAUTH_REFRESH_TOKENURL:/oauth/v2/token?client_id=CLIENT_ID&client_secret=CLIENT_SECRET&refresh_token=REFRESH_TOKEN&grant_type=GRANT_TYPE}
renttrack.oauth.clientId=${RENTTRACK_OAUTH_CLIENT_ID:26_26twn8ycdge8wo4gcc8k8kwwkwwocw00goc4o488s08g00w00w}
renttrack.oauth.clientSecret=${RENTTRACK_OAUTH_CLIENT_SECRET:4k7iv14um3k0cwks4gwwg8k80oc4o48cgkog8g0cs48g884cww}
renttrack.oauth.username=${RENTTRACK_OAUTH_USERNAME:ibell@progrexion.com}
renttrack.oauth.password=${RENTTRACK_OAUTH_PASSWORD:cdcR0cks!}
renttrack.oauth.grantType=${RENTTRACK_OAUTH_GRANT_TYPE:password}

#RentTrack URI Properties
renttrack.uri.baseUrl=${RENTTRACK_API_BASEURL:https://my.sandbox.rt-stg.com}
renttrack.uri.createSubscription=${RENTTRACK_API_CREATE_SUBSCRIPTION:/api/tenant/subscriptions}
renttrack.uri.createUser=${RENTTRACK_API_CREATE_USER:/api/partner/users}
renttrack.uri.updateUser=${RENTTRACK_API_UPDATE_USER:/api/tenant/details}
renttrack.uri.createLease=/api/tenant/leases
renttrack.uri.createPlaidPaymentAccount=/api/tenant/plaid/payment_accounts
renttrack.uri.createTrxFinderByLeaseId=/api/tenant/leases/LEASE_ID/transaction_finders
renttrack.uri.searchTrxFinderByLeaseId=/api/tenant/leases/LEASE_ID/transaction_finders/TRX_FINDER_ID/search
renttrack.uri.paymentAccount=/api/tenant/payment_accounts
renttrack.uri.matchTrxFinderByLeaseId=/api/tenant/transaction_finders/TRX_FINDER_ID/match
renttrack.uri.searchTrxById=/api/tenant/transaction_finders/TRX_FINDER_ID/search
renttrack.uri.leaseOrders=/api/tenant/leases/LEASE_ID/orders?representation=detailed
renttrack.uri.getAllUtilities=/api/tenant/utilities?representation=detailed
renttrack.uri.getUtilityByTradeLineId=/api/tenant/utilities/UTIL_TRADE_LINE_ID/matches?representation=detailed
renttrack.uri.patchUtility=/api/tenant/utilities/UTIL_TRADE_LINE_ID
renttrack.uri.allSubscriptions=/api/tenant/subscriptions?representation=only_active
renttrack.uri.updateTrxById=/api/tenant/transaction_finders/
renttrack.uri.plaidReconnectByPayAccId=/api/tenant/plaid/payment_accounts/PAYMENT_ACCOUNT_ID/reconnect
renttrack.uri.utilityOrders=/api/tenant/utilities/UTILITY_ID/orders?representation=detailed


#RentTrack Properties
renttrack.property.subscriptionDetails=CCOM_PLAN:consumer_lite,CCOM_PROMO:CREDITCOMFREE
renttrack.property.plaidPublicTokenPrefix=public-sandbox-
renttrack.property.transactionAmountMinBy=99
renttrack.property.transactionAmountMaxBy=1
renttrack.property.transactionWindowOpenBy=7
renttrack.property.transactionWindowCloseBy=5
renttrack.property.trxByDefaultAmountMin=1
renttrack.property.trxByDefaultAmountMax=1000
renttrack.property.trxByDefaultWindowOpen=1
renttrack.property.trxByDefaultWindowClose=31
renttrack.property.utilStatus=current,finished
renttrack.property.utilTypes=GAS,WATER,ELECTRIC,WIRELESS
renttrack.property.paymentAccPayType=nopay

#Customer Master Properties
customermaster.property.host=${CUSTOMER_MASTER_API_HOST:http://10.40.30.119:8080/customer_master}
#customermaster.property.host=${CUSTOMER_MASTER_API_HOST:http://private-181b97-customermaster.apiary-mock.com/customer_master}
customermaster.property.apiUser=${CUSTOMER_MASTER_API_USER:apitest}
customermaster.property.password=${CUSTOMER_MASTER_API_PASSWORD:password}
customermaster.property.customerDetailsUri=/v4/customers/{UCID}/details/{BRAND}
customermaster.property.headerNameEndUser=End-User
customermaster.property.headerValueEndUser=batch
customermaster.property.headerNameEndUserType=End-User-Type
customermaster.property.headerValueEndUserType=UNKNOWN
customermaster.property.customerUri=/v4/customers/{UCID}
customermaster.property.apiRetryCount=2
#if the property is ON, then Log will be captured, if it OFF, No logs will be captured
bcm.property.logRequired=ON
#Comma separated http methods. Example GET,POST,DELETE,PUT,PATCH
bcm.property.logOffMethods=GET
bcm.property.transactionPullCycleInDays=14